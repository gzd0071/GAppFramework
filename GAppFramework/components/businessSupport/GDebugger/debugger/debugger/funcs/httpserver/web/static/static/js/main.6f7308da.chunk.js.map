{"version":3,"sources":["utils/log.js","utils/request.js","pages/upload/index.js","pages/json/index.js","pages/logHistory/index.js","index.js"],"names":["logFormate","txt","handleTxt","mt","match","str","obj","JSON","parse","e","isJSON","handleString","re","replace","level","tag","RegExp","$1","$2","ns","Object","objectSpread","handleStr","ltag","logCellRenderer","value","_ref","_getLevelStyle","style","paddingRight","nlevel","color","concat","lstyle","getLevelStyle","hasTag","react_default","a","createElement","className","txtRender","main_default","name","theme","iconStyle","collapsed","displayDataTypes","src","paddingLeft","backgroundColor","fetchGET","path","fetch","window","location","host","then","res","json","Dragger","Upload","InputGroup","Input","Group","Option","Select","props","multiple","action","showUploadList","Logger","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","startServer","ws","WebSocket","onopen","console","log","onmessage","evt","saveData","data","error","list","toConsumableArray","start","Math","min","count","state","maxCount","slice","refreshLogger","length","setState","clearTimeout","time","setTimeout","scroll","isBottom","scrollTop","scrollHeight","goAction","routeUrd","routeType","encodeURIComponent","keyPress","nativeEvent","keyCode","renderRouter","compact","es_select","defaultValue","type","input","width","suffix","onClick","onKeyPress","onChange","target","renderDEK","icon","filter","route","dek","logger","row","_this2","setInterval","addEventListener","_this2$scroll","clientHeight","removeEventListener","_this3","ref","c","map","et","Component","JsonPage","key","paddingTop","parseString","split","Home","withRouter","react_router","component","LogHis","ReactDOM","render","react_router_dom","document","getElementById"],"mappings":"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","file":"static/js/main.6f7308da.chunk.js","sourcesContent":["/**\n * @Author: **wusz**\n * @Date: 2019-11-18 19:51:59\n * @Last Modified by: **wusz**\n * @Last Modified time: `2019-11-19 11:58:54`\n * Copyright (c) 2019 Wusz All rights reserved\n */\n\nimport React from \"react\";\nimport \"../pages/upload/index.css\";\nimport ReactJson from \"react-json-view\";\n\n//===============================================================\n// REQUEST - 日志格式化\n//===============================================================\n\n/*!\n * 字符串格式化\n */\nexport const logFormate = txt => {\n  return handleTxt(txt);\n};\n\nexport const isJSON = str => {\n  try {\n    let obj = JSON.parse(str);\n    return !!obj && typeof obj === \"object\";\n  } catch (e) {}\n  return false;\n};\n\nconst handleTxt = txt => {\n  const mt = txt.match(/\\{(.|\\s)*(?=\\})\\}/g);\n  if (!mt || !isJSON(mt[0])) return [handleString(txt)];\n  const re = txt.replace(/\\{(.|\\s)*(?=\\})\\}/g, \"\");\n  return [handleString(re), mt[0]];\n};\n\nconst handleString = str => {\n  const group = str.match(/^(?:👉)?(?:(.*?)\\s*\\|)?(?:\\s*\\[(.*?)\\])?/g);\n  if (!group) return { level: \"\", tag: \"\", str };\n  const level = RegExp.$1;\n  const tag = RegExp.$2;\n  const ns = str.replace(/^(?:👉)?(?:(.*?)\\s*\\|)?(?:\\s*\\[(.*?)\\])?\\s*(?:=>)?\\s*/g, \"\");\n  return { level, tag, ...handleStr(ns) };\n};\n\nconst handleStr = str => {\n  const mt = str.match(/^(\\d+|\\w|(i|v)+)\\.\\s*/g);\n  if (!mt) return { str };\n  const ltag = RegExp.$1;\n  const re = str.replace(/^(\\d+|\\w|(i|v)+)\\.\\s*/g, \"\");\n  return { ltag, str: re };\n};\n\nconst getLevelStyle = (level, tag) => {\n  const style = {\n    paddingRight: 10\n  };\n  let nlevel = level;\n  if (level === \"ERROR\") {\n    style.color = \"RGB(225,112,85)\";\n    nlevel = `📍${level}`;\n  } else if (level === \"LWARN\") {\n    style.color = \"RGB(253,203,110)\";\n    nlevel = `✏️${level}`;\n  } else if (level === \"LINFO\") {\n    style.color = \"RGB(46,204,113)\";\n    nlevel = `🌟${level}`;\n  } else if (level === \"DEBUG\") {\n    style.color = \"RGB(9,132,227)\";\n    nlevel = `🖌${level}`;\n  } else if (level === \"VBOSE\") {\n    style.color = \"RGB(0,206,201)\";\n    nlevel = `💫${level}`;\n  } else if (level === \"BEGIN\") {\n    style.color = \"#1EC622\";\n    nlevel = `👉${level}`;\n  } else if (level === \"PLINE\") {\n    style.color = \"#1EC622\";\n    nlevel = \"👉========================================================================\";\n  } else if (level === \"SINGL\") {\n    style.color = \"#FA8530\";\n    nlevel = `🌝🌞🌛☀️✨${tag}:`;\n  } else {\n    style.color = \"RGB(0,206,201)\";\n    nlevel = `💫${level ? level : \"VBOSE\"}`;\n  }\n  return { lstyle: style, nlevel };\n};\n\nconst txtRender = ({ level, tag, str, ltag }) => {\n  const { lstyle, nlevel } = getLevelStyle(level, tag);\n  const hasTag = level !== \"PLINE\" && level !== \"SINGL\";\n  return (\n    <div className=\"logger_txt\">\n      <span style={lstyle}>{nlevel}</span>\n      {hasTag ? (\n        <span style={{ paddingRight: 10, color: \"#6539B9\" }}>{`[${\n          tag ? tag : \"UNDEFINED\"\n        }]`}</span>\n      ) : null}\n      {ltag ? <span style={{ color: \"#E64386\" }}>{`${ltag}. `}</span> : null}\n      <span style={{ color: level === \"BEGIN\" ? \"#1EC622\" : \"white\" }}>{str}</span>\n    </div>\n  );\n};\n\nexport const logCellRenderer = value => {\n  if (typeof value !== \"string\") {\n    return txtRender(value);\n  }\n  return (\n    <ReactJson\n      name={false}\n      theme=\"monokai\"\n      iconStyle=\"circle\"\n      collapsed={true}\n      displayDataTypes={false}\n      src={JSON.parse(value)}\n      style={{ paddingLeft: 16, backgroundColor: \"#ffffff00\" }}\n    />\n  );\n};\n","/**\n * @Author: **wusz**\n * @Date: 2019-11-19 09:36:46\n * @Last Modified by: **wusz**\n * @Last Modified time: `2019-11-19 09:37:06`\n * Copyright (c) 2019 Wusz All rights reserved\n */\n\nexport const fetchGET = path => {\n  return fetch(`http://${window.location.host}` + path, {}).then(res => res.json());\n};\n","/**\n * @Author: **wusz**\n * @Date: 2019-05-27 14:37:27\n * @Last Modified by: **wusz**\n * @Last Modified time: `2019-11-19 14:06:08`\n * Copyright (c) 2019 Wusz All rights reserved\n */\n\nimport React, { Component } from \"react\";\nimport \"./index.css\";\nimport { logFormate, logCellRenderer, isJSON } from \"../../utils/log\";\nimport { Upload, Icon, Input, Select } from \"antd\";\nimport \"antd/lib/input/style/index.css\";\nimport \"antd/lib/select/style/index.css\";\nimport \"antd/lib/progress/style/index.css\";\nimport \"antd/lib/upload/style/index.css\";\nimport \"antd/lib/tooltip/style/index.css\";\nimport \"antd/lib/icon/style/index.css\";\nimport \"antd/lib/message/style/index.css\";\nimport { fetchGET } from \"../../utils/request\";\nconst Dragger = Upload.Dragger;\nconst InputGroup = Input.Group;\nconst { Option } = Select;\n\nconst props = {\n  name: \"dek\",\n  multiple: true,\n  action: \"uploadDek\",\n  showUploadList: true\n};\n\n/*!\n * TODO:\n *   1.优化显示个数\n *   2.替换页面Icon\n */\nclass Logger extends Component {\n  constructor(props) {\n    super(props);\n    this.list = [];\n    this.isBottom = true;\n    this.routeType = \"Dispatcher\";\n    this.routeUrd = \"\";\n    this.state = {\n      /// 最大日志数\n      maxCount: 1000,\n      /// 日志筛选器\n      filter: \"\",\n      data: [],\n      route: [\n        \"👉PLINE | [分隔]\",\n        \"👉BEGIN | [Router] Router使用.\",\n        \"👉PLINE | [分隔]\",\n        \"👉SINGL | [开始使用]\"\n      ],\n      dek: [\n        \"👉PLINE | [分隔]\",\n        \"👉BEGIN | [DEK] DEK替换 Start.\",\n        \"👉PLINE | [分隔]\",\n        \"👉SINGL | [开始使用]\"\n      ],\n      logger: [\n        \"👉PLINE | [分隔]\",\n        \"👉BEGIN | [日志] Start.\",\n        \"👉PLINE | [分隔]\",\n        \"👉SINGL | [日志使用说明]\",\n        \"👉ERROR | [错误] a.Style(表示不可恢复的错误).\",\n        \"👉LWARN | [警告] b.Style(表示可恢复的错误).\",\n        \"👉LINFO | [信息] c.Style(表示非错误的信息).\",\n        \"👉DEBUG | [开发] d.Style(表示数据用于调试).\",\n        \"👉VBOSE | [详细] e.Style(提供所有执行细节).\",\n        \"👉PLINE | [分隔]\"\n      ],\n      row: 0\n    };\n  }\n\n  /*!\n   * 启动WebSocket\n   */\n  startServer = () => {\n    if (!(\"WebSocket\" in window)) return;\n    try {\n      const ws = new WebSocket(\"%%WEBSOCKET_URL%%\");\n      ws.onopen = () => {\n        console.log(\"链接成功\");\n      };\n      ws.onmessage = evt => {\n        this.saveData(evt.data);\n      };\n    } catch (error) {}\n  };\n\n  /**\n   * 保存数据到存储库\n   * @param {String} 日志列表\n   */\n  saveData = txt => {\n    let list = logFormate(txt);\n    /// 经过日志过滤器\n    // if (this.state.filter.length && !htxt.startWith(`👉${this.state.filter}`)) {\n    //   return;\n    // }\n    list = [...this.list, ...list];\n    const start = Math.min(list.count - this.state.maxCount, 0);\n    this.list = list.slice(start);\n  };\n\n  componentDidMount() {\n    this.startServer();\n    // 模拟推送数据\n    // setInterval(() => {\n    //   this.saveData(\n    //     `👉DEBUG | [Request] => Params: {\\n  \"work_type\" : 2,\\n  \"lng\" : \"116.2982\",\\n  \"lat\" : \"40.0415\",\\n  \"recommend\" : 1,\\n  \"citydomain\" : \"bj\",\\n  \"job_type\" : 0\\n,\\n \"index\":${this.state.data.length}}`\n    //   );\n    // }, 400);\n    // 定时更新数据;\n    setInterval(() => {\n      this.refreshLogger();\n    }, 200);\n    if (this.scroll) {\n      this.scroll.addEventListener(\"scroll\", () => {\n        const { clientHeight, scrollHeight, scrollTop } = this.scroll;\n        this.isBottom = clientHeight + scrollTop === scrollHeight;\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.scroll) {\n      this.scroll.removeEventListener(\"scroll\", () => {});\n    }\n  }\n\n  /// 更新UI\n  refreshLogger = () => {\n    if (\n      this.list.length !== this.maxCount &&\n      this.list.length === this.state.data.length\n    ) {\n      return;\n    }\n    this.setState({ data: this.list ? this.list : [] });\n    clearTimeout(this.time);\n    this.time = setTimeout(() => {\n      if (this.scroll && this.isBottom) {\n        this.scroll.scrollTop = this.scroll.scrollHeight;\n      }\n    }, 10);\n  };\n\n  goAction = () => {\n    if (!this.routeUrd.length) {\n      return;\n    }\n    fetchGET(\n      `/urd?type=${this.routeType}&urd=${encodeURIComponent(this.routeUrd)}`\n    ).then(res => {});\n  };\n\n  keyPress = e => {\n    if (e.nativeEvent.keyCode === 13) {\n      this.goAction();\n    }\n  };\n\n  renderRouter = () => {\n    return (\n      <div className=\"logger_route\">\n        <InputGroup compact className=\"logger_route\">\n          <Select defaultValue=\"Dispatcher\" saveData={type => (this.routeType = type)}>\n            <Option value=\"Dispatcher\">Dispatcher</Option>\n            <Option value=\"Router\">Router</Option>\n          </Select>\n          <Input\n            style={{ width: \"70%\" }}\n            suffix={<div onClick={() => this.goAction()}>GO</div>}\n            onKeyPress={this.keyPress}\n            onChange={e => {\n              this.routeUrd = e.target.value;\n            }}\n          />\n        </InputGroup>\n      </div>\n    );\n  };\n\n  renderDEK = () => {\n    return (\n      <div className=\"logger_dek\">\n        <Dragger {...props}>\n          <p className=\"ant-upload-drag-icon\">\n            <Icon type=\"inbox\"></Icon>\n          </p>\n          <p className=\"ant-upload-text\">点击或将DEK文件拖拽到此区域上传</p>\n          <p className=\"ant-upload-hint\">\n            支持单个上传，严禁上传公司内部资料及其他违禁文件\n          </p>\n        </Dragger>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"logger_con\" ref={c => (this.scroll = c)}>\n        {this.state.route.map(txt => logCellRenderer(logFormate(txt)[0]))}\n        {this.renderRouter()}\n        {this.state.dek.map(txt => logCellRenderer(logFormate(txt)[0]))}\n        {this.renderDEK()}\n        {this.state.logger.map(txt => logCellRenderer(logFormate(txt)[0]))}\n        {this.state.data.map(et => {\n          return logCellRenderer(et);\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Logger;\n","/**\n * @Author: **wusz**\n * @Date: 2019-05-27 14:37:27\n * @Last Modified by: **wusz**\n * @Last Modified time: `2019-11-19 11:58:49`\n * Copyright (c) 2019 Wusz All rights reserved\n */\n\nimport React, { Component } from \"react\";\nimport \"../upload/index.css\";\nimport ReactJson from \"react-json-view\";\n\n/*!\n * 显示JsonPage\n */\nclass JsonPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      json: { key: \"value\" }\n    };\n  }\n\n  /*!\n   * GET请求\n   */\n  fetchGET = path => {\n    return fetch(`http://${window.location.host}` + path, {}).then(res => res.json());\n  };\n\n  componentDidMount() {\n    this.fetchGET(\"/json\").then(json => this.setState({ json }));\n  }\n\n  render() {\n    return (\n      <div className=\"logger_con\" ref={c => (this.scroll = c)}>\n        <ReactJson\n          name={false}\n          theme=\"monokai\"\n          iconStyle=\"circle\"\n          collapsed={false}\n          displayDataTypes={false}\n          src={this.state.json}\n          style={{ paddingLeft: 16, backgroundColor: \"#ffffff00\", paddingTop: 16 }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default JsonPage;\n","/**\n * @Author: **wusz**\n * @Date: 2019-05-27 14:37:27\n * @Last Modified by: **wusz**\n * @Last Modified time: `2019-11-19 11:58:27`\n * Copyright (c) 2019 Wusz All rights reserved\n */\n\nimport React, { Component } from \"react\";\nimport \"../upload/index.css\";\nimport { logFormate, logCellRenderer } from \"../../utils/log\";\nimport { fetchGET } from \"../../utils/request\";\n\n/*!\n * 显示JsonPage\n */\nclass JsonPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    fetchGET(\"/logHistory\").then(res => {\n      this.parseString(res.data);\n    });\n  }\n\n  parseString = res => {\n    const list = res.split(/[^\\\\n](?=👉)/);\n    let data = [];\n    list.map(txt => (data = data.concat(logFormate(txt))));\n    this.setState({ data });\n  };\n\n  render() {\n    return (\n      <div className=\"logger_con\" ref={c => (this.scroll = c)}>\n        {this.state.data.map(et => {\n          return logCellRenderer(et);\n        })}\n      </div>\n    );\n  }\n}\n\nexport default JsonPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router, Route, Switch, withRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport Upload from \"./pages/upload\";\nimport JsonPage from \"./pages/json\";\nimport LogHis from \"./pages/logHistory\";\n\nconst Home = withRouter(props => {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/logger\" component={Upload} />\n        <Route path=\"/json\" component={JsonPage} />\n        <Route path=\"/logHistory\" component={LogHis} />\n        <Route path=\"/\" component={Upload} />\n      </Switch>\n    </div>\n  );\n});\n\nReactDOM.render(\n  <Router>\n    <Home />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}